From c79631a1c8b4ecf3ec1fc557c875d412058b3e47 Mon Sep 17 00:00:00 2001
From: Tony Cook <tony@develop-help.com>
Date: Tue, 15 Sep 2015 10:12:04 +1000
Subject: [PATCH] prevent op/time.t failures on NetBSD 5.1

- make the watchdog time exceed the maximum time for the "very basic times
  test".  This doesn't prevent the test from failing, but prevents the
  entire test script from being killed by the watchdog if the times()
  test does fail

- do more work inside the loop, with the previous "burn cycles" loop
  system time was increasing but user time stayed at its starting value.
---
 t/op/time.t | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/t/op/time.t b/t/op/time.t
index f5ce3391c0..d3b8b9c67d 100644
--- a/t/op/time.t
+++ b/t/op/time.t
@@ -12,7 +12,7 @@ plan tests => 72;
 # burning tons of CPU for dates far in the future.
 # watchdog() makes sure that the test script eventually exits if
 # the tests are triggering the failing behavior
-watchdog(15);
+watchdog(25);
 
 ($beguser,$begsys) = times;
 
@@ -21,9 +21,9 @@ $beg = time;
 while (($now = time) == $beg) { sleep 1 }
 
 ok($now > $beg && $now - $beg < 10,             'very basic time test');
-
+my $x = "aaaa";
 for ($i = 0; $i < 1_000_000; $i++) {
-    for my $j (1..100) {}; # burn some user cycles
+    for my $j (1..1000) { ++$x; }; # burn some user cycles
     ($nowuser, $nowsys) = times;
     $i = 2_000_000 if $nowuser > $beguser && ( $nowsys >= $begsys ||
                                             (!$nowsys && !$begsys));
-- 
2.12.1-534-g7cedf66

