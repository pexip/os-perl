From 5f866b6b20ebe3fd691b16951d24c3d6ff1f0cc2 Mon Sep 17 00:00:00 2001
From: Niko Tyni <ntyni@debian.org>
Date: Tue, 5 Jul 2016 15:47:40 +0200
Subject: Look for sitecustomize.pl in /etc/perl rather than sitelib on Debian
 systems

Debian uses this sitecustomize.pl as a transition mechanism for removing
the current working directory (".") from @INC by default while leaving
the local administrator a temporary means of re-adding it back.

This mechanism is expected to be removed after one Debian stable release.

Patch-Name: debian/CVE-2016-1238/sitecustomize-in-etc.diff
---
 perl.c          | 5 +++++
 pod/perlrun.pod | 5 +++++
 2 files changed, 10 insertions(+)

diff --git a/perl.c b/perl.c
index 1e543e716..8ba560afe 100644
--- a/perl.c
+++ b/perl.c
@@ -2144,7 +2144,12 @@ S_parse_body(pTHX_ char **env, XSINIT_t xsinit)
 	}
 #  else
 	/* SITELIB_EXP is a function call on Win32.  */
+#ifdef DEBIAN
+	/* temporary transition mechanism for dropping "." from @INC */
+	const char *const raw_sitelib = "/etc/perl";
+#else
 	const char *const raw_sitelib = SITELIB_EXP;
+#endif
 	if (raw_sitelib) {
 	    /* process .../.. if PERL_RELOCATABLE_INC is defined */
 	    SV *sitelib_sv = mayberelocate(raw_sitelib, strlen(raw_sitelib),
diff --git a/pod/perlrun.pod b/pod/perlrun.pod
index 349e91e3d..db50b233f 100644
--- a/pod/perlrun.pod
+++ b/pod/perlrun.pod
@@ -494,6 +494,11 @@ blocks will be likewise executed very late.
 To determine at runtime if this capability has been compiled in your
 perl, you can check the value of C<$Config{usesitecustomize}>.
 
+Note: on Debian based systems, the system perl currently uses
+C</etc/perl/sitecustomize.pl> rather than C<$Config{sitelib}/sitecustomize.pl>.
+This may change in the future and is only provided as a temporary transition
+mechanism for removing the current working directory from C<@INC>.
+
 =item B<-F>I<pattern>
 X<-F>
 
